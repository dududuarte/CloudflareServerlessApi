!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(r,n,o)=>(r,...s)=>t.push([n.toUpperCase(),RegExp(`^${(e+r).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),s])&&o}),routes:t,async handle(e,...r){let n,o,s=new URL(e.url);for(var[a,i,u]of(e.query=Object.fromEntries(s.searchParams),t))if((a===e.method||"ALL"===a)&&(o=s.pathname.match(i)))for(var p of(e.params=o.groups,u))if(void 0!==(n=await p(e.proxy||e,...r)))return n}})}},function(e,t,r){"use strict";r.r(t);var n=r(0);var o=async()=>{const e=(await MY_KV.list()).keys.map(e=>e.name),t=[];for(let r of e){let e=await MY_KV.get(r);t.push(e)}if(0===t.length)return new Response("404, no posts found",{status:404});return new Response("["+t+"]",{headers:{"Access-Control-Allow-Origin":"*","Content-type":"application/json"}})};class s{Generate(){const e="0123456789ABCDEF",t="xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx";for(var r="",n=0;n<t.length;n++){var o=Math.floor(Math.random()*e.length);r+="x"==t[n]?e[o]:t[n]}return r.toLowerCase()}}var a=async e=>{let t=await e.json();const r=t.username+":"+(new s).Generate();t={...t,id:r};try{await MY_KV.put(r,JSON.stringify(t))}catch{return new Response("Error adding post",{status:500})}return new Response(JSON.stringify(t),{headers:{"Access-Control-Allow-Origin":"*","Content-type":"application/json"}})};var i=async e=>{let t=await e.json();try{await MY_KV.put(t.key,JSON.stringify(t))}catch{return new Response("Error adding post",{status:500})}return new Response(JSON.stringify(t),{headers:{"Access-Control-Allow-Origin":"*","Content-type":"application/json"}})};const u=Object(n.Router)();u.get("/",()=>new Response("Hello, world! This is the root page of your Worker template.")),u.get("/posts",o),u.post("/posts",a),u.put("/posts",i),u.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(u.handle(e.request))})}]);